<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts | Hydro@UMass</title><link>https://hydro-umass.github.io/post/</link><atom:link href="https://hydro-umass.github.io/post/index.xml" rel="self" type="application/rss+xml"/><description>Posts</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Tue, 07 May 2024 00:00:00 +0000</lastBuildDate><image><url>https://hydro-umass.github.io/media/icon_hu7bf4dc0a2f2b0b6f2de776cdc877e948_11369_512x512_fill_lanczos_center_3.png</url><title>Posts</title><link>https://hydro-umass.github.io/post/</link></image><item><title>Global Cloud Biases in Optical Satellite Remote Sensing of Rivers</title><link>https://hydro-umass.github.io/post/24-05-07-cloud-freq/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://hydro-umass.github.io/post/24-05-07-cloud-freq/</guid><description>&lt;p>We often use remote sensing for environmental studies in hopes of reducing the geographic biases introduced by the availability of in-situ monitoring data. Global coverage and often sun-synchronous orbits provide a seemingly uniform view of the Earth&amp;rsquo;s surface. However, atmospheric conditions vary both regionally and seasonally. For example, the central section of the Amazon basin, the worldâ€™s largest river by discharge, typically experiences more than 90% cloud cover during the wet season. This period is arguably the most important to monitor for hydrological study and could be entirely unobserved when relying on satellite optical remote sensing.&lt;/p>
&lt;p>Rapidly increasing spatial and temporal resolution of satellite sensors has increased the volume of available cloud-free optical data, but with daily high-resolution imagery now available, we are nearing a barrier that cannot be circumvented by better optical sensors alone. Kostas and I, along with co-author George Allen, recently submitted a manuscript to Geophysical Research Letters that characterizes the global impact of clouds on remote sensing observations of rivers. We analyzed 22 years of daily river discharge and cloud data covering 21,642 sections of rivers of various sizes and climates. Our findings reveal that cloud cover severely biases the distribution of river discharges we observe, especially for Tropical and Arctic rivers. This means that &lt;strong>satellite images do not accurately represent river conditions&lt;/strong>. Our research provides the first comprehensive analysis of extent and impact of this bias.&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="alt text" srcset="
/post/24-05-07-cloud-freq/cloud-freq-Figure3_huafb5e92aabf1baffce2cd05b2fd04373_1999015_efb8954e4debef54c52851d4e6f5b40a.webp 400w,
/post/24-05-07-cloud-freq/cloud-freq-Figure3_huafb5e92aabf1baffce2cd05b2fd04373_1999015_c5aeaabf0f6d928e53f0069ab8f0ed23.webp 760w,
/post/24-05-07-cloud-freq/cloud-freq-Figure3_huafb5e92aabf1baffce2cd05b2fd04373_1999015_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://hydro-umass.github.io/post/24-05-07-cloud-freq/cloud-freq-Figure3_huafb5e92aabf1baffce2cd05b2fd04373_1999015_efb8954e4debef54c52851d4e6f5b40a.webp"
width="760"
height="651"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;em>In this figure, the color scale from red to blue indicates the amount of bias in the median river discharge when sampled only on cloud-free days. Negative bias (red) indicates that optical satellites underestimate the median discharge. We found that the severity and direction of this bias can be predicted by the relationship between cloud and discharge seasonality (see subplots above and below map).&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://essopenarchive.org/users/551563/articles/911901-global-cloud-biases-in-optical-satellite-remote-of-rivers" target="_blank" rel="noopener">&lt;strong>Read the preprint&lt;/strong>&lt;/a> or get in touch for more information.&lt;/p></description></item><item><title>Modeling daily lake ice cover in the Northern Hemisphere</title><link>https://hydro-umass.github.io/post/24-05-02-lakeice-model/</link><pubDate>Thu, 02 May 2024 00:00:00 +0000</pubDate><guid>https://hydro-umass.github.io/post/24-05-02-lakeice-model/</guid><description>&lt;p>Recently, &lt;a href="https://www.necasc-winterdrawdown.com/" target="_blank" rel="noopener">our project team&lt;/a> has been working on developing a universal model to simulate &lt;strong>daily&lt;/strong> lake ice cover for nearly all lakes in the Northern Hemisphere. First, we followed the &lt;a href="https://agupubs.onlinelibrary.wiley.com/doi/full/10.1029/2021GL095614" target="_blank" rel="noopener">2021 GRL paper&lt;/a> to use Landsat to retrieve long-term lake ice cover data for &amp;gt;33,000 lakes in the Northern Hemisphere (1985-2022). While Landsat can provide high-resolution (30m) observations on a global scale, the relative long revisiting period (~16 days) and influences from the cloud cover may result in large data gaps and potential incorrect estimates of the ice duration. In order to address these limitations, we trained a deep learning model: Long Short-Term Memory with the satellite observations from 1985-2012 (Landsat 5 &amp;amp; 7) to predict the daily lake ice cover using the &lt;a href="https://cds.climate.copernicus.eu/cdsapp#!/dataset/reanalysis-era5-land?tab=overview" target="_blank" rel="noopener">ERA5-Land&lt;/a> daily meteorological data (e.g. air temperature) and static attributes from &lt;a href="https://www.hydrosheds.org/products/hydrolakes" target="_blank" rel="noopener">HydroLAKES&lt;/a> (e.g. depth) as input.&lt;/p>
&lt;p>We evaluated the model against the satellite observations during the test period (2013-2022, Landsat 8 &amp;amp; 9) to examine the ability of the model to predict future lake ice. The performance was satisfactory during the test period with a median Root Mean Square Error (RMSE) of 0.10 (Ice cover ranges from 0 to 1). Note the model has not seen the test data during training, this indicates a strong potential to apply the model to run future projections of lake ice.&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img alt="alt text" srcset="
/post/24-05-02-lakeice-model/image_hub45dbed60a9edbc9a13d379d006bdf22_266865_b5c61700b9919fe38151356a2d057646.webp 400w,
/post/24-05-02-lakeice-model/image_hub45dbed60a9edbc9a13d379d006bdf22_266865_0cc0d1bcc497f93e91cdff3c6f4e01d1.webp 760w,
/post/24-05-02-lakeice-model/image_hub45dbed60a9edbc9a13d379d006bdf22_266865_1200x1200_fit_q75_h2_lanczos_3.webp 1200w"
src="https://hydro-umass.github.io/post/24-05-02-lakeice-model/image_hub45dbed60a9edbc9a13d379d006bdf22_266865_b5c61700b9919fe38151356a2d057646.webp"
width="760"
height="349"
loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p></description></item><item><title>Deploying JupyterHub on the Cloud</title><link>https://hydro-umass.github.io/post/20-01-20-jupyter-hub/</link><pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate><guid>https://hydro-umass.github.io/post/20-01-20-jupyter-hub/</guid><description>&lt;p>I&amp;rsquo;m teaching a class on computational methods for environmental engineers this semester, and the language of choice is Python&lt;/p>
&lt;p>as it is simple enough for potentially novice programmers and has a very rich ecosystem of existing libraries that make life easier for any environmental engineer/scientist. As I have taught the class once before, I emphasized reproducibility which meant that
we used Jupyter notebooks for most of the class. The other aspect of the class that I found tremendously useful was live coding. Thankfully, the &lt;a href="https://github.com/damianavila/RISE" target="_blank" rel="noopener">RISE extension&lt;/a> combines Jupyter notebooks with slideshows (powered by &lt;a href="https://revealjs.com/#/" target="_blank" rel="noopener">Reveal.js&lt;/a> presentation framework) and I ended up using it exclusively for preparing the lectures.&lt;/p>
&lt;p>Although a good chunk of the class was spent with the students coding on their own with me going around answering questions, I decided to take it a step further by utilizing a &lt;a href="https://en.wikipedia.org/wiki/Flipped%5Fclassroom" target="_blank" rel="noopener">flipped classroom&lt;/a> approach and combining it with paired/grouped learning. Essentially the students go over some lecture material prior to class, and we spend most of the lecture time explaining anything that the students had trouble but leave enough time for groups of students to solve a coding problem (relevant to the lecture material of course). The last part of the lecture is spent going over the answers of each student group and answering any questions. This presents a technology issue: it would be too much of a hassle to connect each student&amp;rsquo;s laptop to the projector in order to show
their answers to the entire class. The answer would be to set up a server where the students can connect and solve the problem in Jupyter notebooks on the server. &lt;a href="https://jupyter.org/hub" target="_blank" rel="noopener">Jupyter Hub&lt;/a> would be the solution, but I didn&amp;rsquo;t want to have all the students connect to my laptop.&lt;/p>
&lt;p>Here&amp;rsquo;s where the &lt;a href="https://github.com/jupyterhub/the-littlest-jupyterhub" target="_blank" rel="noopener">the Littlest JupyterHub (TLJH)&lt;/a> comes in, which is a distribution that helps you provide Jupyter Notebooks to 1-50 users on a single server (hosted on a cloud provider potentially). In this post, I will document how I set up TLJH on the Google Cloud.&lt;/p>
&lt;p>The first step involves logging in to the &lt;a href="https://console.cloud.google.com/" target="_blank" rel="noopener">Google Cloud Console&lt;/a> and creating a new VM instance. You can keep the default options except for:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Change the Boot Disk image from &lt;code>Debian GNU/Linux 9 (Stretch)&lt;/code> to &lt;code>Ubuntu 18.04 LTS&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Disable any service accounts (under &lt;code>Identity and API access&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the &lt;strong>Allow HTTP Traffic&lt;/strong> and &lt;strong>Allow HTTPS Traffic&lt;/strong> checkboxes under &lt;code>Firewall&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Customize the &lt;code>Startup script&lt;/code> under &lt;code>Management, disks, networking, SSH keys&lt;/code>
with the following&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> curl https://raw.githubusercontent.com/jupyterhub/the-littlest-jupyterhub/master/bootstrap/bootstrap.py &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="p">|&lt;/span> sudo python3 - &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --admin &amp;lt;admin-user-name&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>After creating the VM and waiting a few minutes for TLJH to be installed, grab
the external IP of your VM (without the ~ &lt;a href="https://" target="_blank" rel="noopener">https://&lt;/a> ~ part) and login to your new
server. If you click on the &lt;code>Control Panel&lt;/code> and the &lt;code>Admin&lt;/code> link, you can add
users (i.e. your students). Now we can have prepared Jupyter notebooks on the
cloud, that each student can work on and go over the problems/answers from a
single machine!&lt;/p></description></item><item><title>Hello world!</title><link>https://hydro-umass.github.io/post/20-01-19-hello-world/</link><pubDate>Sun, 19 Jan 2020 00:00:00 +0000</pubDate><guid>https://hydro-umass.github.io/post/20-01-19-hello-world/</guid><description>&lt;p>Every blog starts with one of these. Right?&lt;/p></description></item></channel></rss>